// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: account/tenant/v1/tenant.proto

package tenantv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TenantStatus int32

const (
	TenantStatus_TENANT_STATUS_UNSPECIFIED TenantStatus = 0
	// Default. After the tenant is created, it is placed in the provisioning state and not ready for use yet.
	TenantStatus_TENANT_STATUS_PROVISIONING TenantStatus = 1
	// Active tenant is a tenant that is ready for use and can be accessed by users.
	TenantStatus_TENANT_STATUS_ACTIVE TenantStatus = 2
	// Inactive tenant is a tenant that is not ready for use and cannot be accessed by users. It is disabled by the tenant admin only.
	TenantStatus_TENANT_STATUS_INACTIVE TenantStatus = 3
)

// Enum value maps for TenantStatus.
var (
	TenantStatus_name = map[int32]string{
		0: "TENANT_STATUS_UNSPECIFIED",
		1: "TENANT_STATUS_PROVISIONING",
		2: "TENANT_STATUS_ACTIVE",
		3: "TENANT_STATUS_INACTIVE",
	}
	TenantStatus_value = map[string]int32{
		"TENANT_STATUS_UNSPECIFIED":  0,
		"TENANT_STATUS_PROVISIONING": 1,
		"TENANT_STATUS_ACTIVE":       2,
		"TENANT_STATUS_INACTIVE":     3,
	}
)

func (x TenantStatus) Enum() *TenantStatus {
	p := new(TenantStatus)
	*p = x
	return p
}

func (x TenantStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TenantStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_account_tenant_v1_tenant_proto_enumTypes[0].Descriptor()
}

func (TenantStatus) Type() protoreflect.EnumType {
	return &file_account_tenant_v1_tenant_proto_enumTypes[0]
}

func (x TenantStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TenantStatus.Descriptor instead.
func (TenantStatus) EnumDescriptor() ([]byte, []int) {
	return file_account_tenant_v1_tenant_proto_rawDescGZIP(), []int{0}
}

type TenantProductionType int32

const (
	TenantProductionType_TENANT_PRODUCTION_TYPE_UNSPECIFIED TenantProductionType = 0
	// Default. Enterprise tenant is a tenant that is created by an enterprise customer.
	TenantProductionType_TENANT_PRODUCTION_TYPE_ENTERPRISE TenantProductionType = 1
	// Root tenant is a tenant that is created by the system itself. It is used for system-wide configurations. There is only one root tenant in the system.
	TenantProductionType_TENANT_PRODUCTION_TYPE_ROOT TenantProductionType = 2
	// Internal tenant is a tenant that is created by the system itself. It is used for internal testing purposes.
	TenantProductionType_TENANT_PRODUCTION_TYPE_INTERNAL TenantProductionType = 3
)

// Enum value maps for TenantProductionType.
var (
	TenantProductionType_name = map[int32]string{
		0: "TENANT_PRODUCTION_TYPE_UNSPECIFIED",
		1: "TENANT_PRODUCTION_TYPE_ENTERPRISE",
		2: "TENANT_PRODUCTION_TYPE_ROOT",
		3: "TENANT_PRODUCTION_TYPE_INTERNAL",
	}
	TenantProductionType_value = map[string]int32{
		"TENANT_PRODUCTION_TYPE_UNSPECIFIED": 0,
		"TENANT_PRODUCTION_TYPE_ENTERPRISE":  1,
		"TENANT_PRODUCTION_TYPE_ROOT":        2,
		"TENANT_PRODUCTION_TYPE_INTERNAL":    3,
	}
)

func (x TenantProductionType) Enum() *TenantProductionType {
	p := new(TenantProductionType)
	*p = x
	return p
}

func (x TenantProductionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TenantProductionType) Descriptor() protoreflect.EnumDescriptor {
	return file_account_tenant_v1_tenant_proto_enumTypes[1].Descriptor()
}

func (TenantProductionType) Type() protoreflect.EnumType {
	return &file_account_tenant_v1_tenant_proto_enumTypes[1]
}

func (x TenantProductionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TenantProductionType.Descriptor instead.
func (TenantProductionType) EnumDescriptor() ([]byte, []int) {
	return file_account_tenant_v1_tenant_proto_rawDescGZIP(), []int{1}
}

type TenantSubscriptionType int32

const (
	TenantSubscriptionType_TENANT_SUBSCRIPTION_TYPE_UNSPECIFIED TenantSubscriptionType = 0
	// Default. Basic subscription is a subscription that provides basic features with most affordable pricing.
	TenantSubscriptionType_TENANT_SUBSCRIPTION_TYPE_BASIC TenantSubscriptionType = 1
	// Standard subscription is a subscription that provides standard features with advanced pricing.
	TenantSubscriptionType_TENANT_SUBSCRIPTION_TYPE_STANDARD TenantSubscriptionType = 2
	// Premium subscription is a subscription that provides premium features with the highest pricing.
	TenantSubscriptionType_TENANT_SUBSCRIPTION_TYPE_PREMIUM TenantSubscriptionType = 3
)

// Enum value maps for TenantSubscriptionType.
var (
	TenantSubscriptionType_name = map[int32]string{
		0: "TENANT_SUBSCRIPTION_TYPE_UNSPECIFIED",
		1: "TENANT_SUBSCRIPTION_TYPE_BASIC",
		2: "TENANT_SUBSCRIPTION_TYPE_STANDARD",
		3: "TENANT_SUBSCRIPTION_TYPE_PREMIUM",
	}
	TenantSubscriptionType_value = map[string]int32{
		"TENANT_SUBSCRIPTION_TYPE_UNSPECIFIED": 0,
		"TENANT_SUBSCRIPTION_TYPE_BASIC":       1,
		"TENANT_SUBSCRIPTION_TYPE_STANDARD":    2,
		"TENANT_SUBSCRIPTION_TYPE_PREMIUM":     3,
	}
)

func (x TenantSubscriptionType) Enum() *TenantSubscriptionType {
	p := new(TenantSubscriptionType)
	*p = x
	return p
}

func (x TenantSubscriptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TenantSubscriptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_account_tenant_v1_tenant_proto_enumTypes[2].Descriptor()
}

func (TenantSubscriptionType) Type() protoreflect.EnumType {
	return &file_account_tenant_v1_tenant_proto_enumTypes[2]
}

func (x TenantSubscriptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TenantSubscriptionType.Descriptor instead.
func (TenantSubscriptionType) EnumDescriptor() ([]byte, []int) {
	return file_account_tenant_v1_tenant_proto_rawDescGZIP(), []int{2}
}

// A group or an entity that has its own isolated environment and resources within a shared system.
type Tenant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. In form of nanoid.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. Name of the tenant. Unique within the system.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Required. Default is PROVISIONING status.
	Status TenantStatus `protobuf:"varint,3,opt,name=status,proto3,enum=account.tenant.v1.TenantStatus" json:"status,omitempty"`
	// Required. Domain of the tenant. Unique within the system. Example: "example.vnworkday.com".
	Domain string `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	// Required. Timezone of the tenant. Following Olson format. Default is UTC. Example: "America/Los_Angeles", "Asia/Ho_Chi_Minh".
	Timezone string `protobuf:"bytes,5,opt,name=timezone,proto3" json:"timezone,omitempty"`
	// Required. Default is ENTERPRISE.
	ProductionType TenantProductionType `protobuf:"varint,6,opt,name=production_type,json=productionType,proto3,enum=account.tenant.v1.TenantProductionType" json:"production_type,omitempty"`
	// Required. Default is BASIC.
	SubscriptionType TenantSubscriptionType `protobuf:"varint,7,opt,name=subscription_type,json=subscriptionType,proto3,enum=account.tenant.v1.TenantSubscriptionType" json:"subscription_type,omitempty"`
	// Required. Describe whether the user can self-register to the tenant or must be invited by the tenant admin. Default is false.
	SelfRegistrationEnabled bool `protobuf:"varint,8,opt,name=self_registration_enabled,json=selfRegistrationEnabled,proto3" json:"self_registration_enabled,omitempty"`
	// Required. Time when the tenant was created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Required. Time when the tenant was last updated.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Tenant) Reset() {
	*x = Tenant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_tenant_v1_tenant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tenant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tenant) ProtoMessage() {}

func (x *Tenant) ProtoReflect() protoreflect.Message {
	mi := &file_account_tenant_v1_tenant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tenant.ProtoReflect.Descriptor instead.
func (*Tenant) Descriptor() ([]byte, []int) {
	return file_account_tenant_v1_tenant_proto_rawDescGZIP(), []int{0}
}

func (x *Tenant) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Tenant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tenant) GetStatus() TenantStatus {
	if x != nil {
		return x.Status
	}
	return TenantStatus_TENANT_STATUS_UNSPECIFIED
}

func (x *Tenant) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Tenant) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *Tenant) GetProductionType() TenantProductionType {
	if x != nil {
		return x.ProductionType
	}
	return TenantProductionType_TENANT_PRODUCTION_TYPE_UNSPECIFIED
}

func (x *Tenant) GetSubscriptionType() TenantSubscriptionType {
	if x != nil {
		return x.SubscriptionType
	}
	return TenantSubscriptionType_TENANT_SUBSCRIPTION_TYPE_UNSPECIFIED
}

func (x *Tenant) GetSelfRegistrationEnabled() bool {
	if x != nil {
		return x.SelfRegistrationEnabled
	}
	return false
}

func (x *Tenant) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Tenant) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_account_tenant_v1_tenant_proto protoreflect.FileDescriptor

var file_account_tenant_v1_tenant_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x03, 0x0a, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x12, 0x50, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x73, 0x65,
	0x6c, 0x66, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x73,
	0x65, 0x6c, 0x66, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x83, 0x01, 0x0a,
	0x0c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x19, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a,
	0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52,
	0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x03, 0x2a, 0xab, 0x01, 0x0a, 0x14, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x54,
	0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e,
	0x54, 0x45, 0x52, 0x50, 0x52, 0x49, 0x53, 0x45, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x45,
	0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x54,
	0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x03,
	0x2a, 0xb3, 0x01, 0x0a, 0x16, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x24, 0x54,
	0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f,
	0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x54, 0x45, 0x4e,
	0x41, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x10, 0x02,
	0x12, 0x24, 0x0a, 0x20, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43,
	0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x45,
	0x4d, 0x49, 0x55, 0x4d, 0x10, 0x03, 0x42, 0xc1, 0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x42, 0x0b, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6e, 0x77, 0x6f,
	0x72, 0x6b, 0x64, 0x61, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x54, 0x58, 0xaa, 0x02, 0x11, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5c, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5c, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x3a,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_account_tenant_v1_tenant_proto_rawDescOnce sync.Once
	file_account_tenant_v1_tenant_proto_rawDescData = file_account_tenant_v1_tenant_proto_rawDesc
)

func file_account_tenant_v1_tenant_proto_rawDescGZIP() []byte {
	file_account_tenant_v1_tenant_proto_rawDescOnce.Do(func() {
		file_account_tenant_v1_tenant_proto_rawDescData = protoimpl.X.CompressGZIP(file_account_tenant_v1_tenant_proto_rawDescData)
	})
	return file_account_tenant_v1_tenant_proto_rawDescData
}

var file_account_tenant_v1_tenant_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_account_tenant_v1_tenant_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_account_tenant_v1_tenant_proto_goTypes = []interface{}{
	(TenantStatus)(0),             // 0: account.tenant.v1.TenantStatus
	(TenantProductionType)(0),     // 1: account.tenant.v1.TenantProductionType
	(TenantSubscriptionType)(0),   // 2: account.tenant.v1.TenantSubscriptionType
	(*Tenant)(nil),                // 3: account.tenant.v1.Tenant
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_account_tenant_v1_tenant_proto_depIdxs = []int32{
	0, // 0: account.tenant.v1.Tenant.status:type_name -> account.tenant.v1.TenantStatus
	1, // 1: account.tenant.v1.Tenant.production_type:type_name -> account.tenant.v1.TenantProductionType
	2, // 2: account.tenant.v1.Tenant.subscription_type:type_name -> account.tenant.v1.TenantSubscriptionType
	4, // 3: account.tenant.v1.Tenant.created_at:type_name -> google.protobuf.Timestamp
	4, // 4: account.tenant.v1.Tenant.updated_at:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_account_tenant_v1_tenant_proto_init() }
func file_account_tenant_v1_tenant_proto_init() {
	if File_account_tenant_v1_tenant_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_account_tenant_v1_tenant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tenant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_account_tenant_v1_tenant_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_account_tenant_v1_tenant_proto_goTypes,
		DependencyIndexes: file_account_tenant_v1_tenant_proto_depIdxs,
		EnumInfos:         file_account_tenant_v1_tenant_proto_enumTypes,
		MessageInfos:      file_account_tenant_v1_tenant_proto_msgTypes,
	}.Build()
	File_account_tenant_v1_tenant_proto = out.File
	file_account_tenant_v1_tenant_proto_rawDesc = nil
	file_account_tenant_v1_tenant_proto_goTypes = nil
	file_account_tenant_v1_tenant_proto_depIdxs = nil
}
