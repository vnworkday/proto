// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: shared/v1/request.proto

package sharedv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Operator for filtering, aggregating, or calculating.
type Operator int32

const (
	Operator_OPERATOR_UNSPECIFIED Operator = 0
	// Equal.
	Operator_OPERATOR_EQ Operator = 1
	// Not equal.
	Operator_OPERATOR_NOT_EQ Operator = 2
	// Greater than.
	Operator_OPERATOR_GT Operator = 3
	// Less than.
	Operator_OPERATOR_LT Operator = 4
	// Greater than or equal.
	Operator_OPERATOR_GE Operator = 5
	// Less than or equal.
	Operator_OPERATOR_LE Operator = 6
	// In.
	Operator_OPERATOR_IN Operator = 7
	// Not in.
	Operator_OPERATOR_NOT_IN Operator = 8
	// Contains.
	Operator_OPERATOR_CONTAINS Operator = 9
	// Not contains.
	Operator_OPERATOR_NOT_CONTAINS Operator = 10
	// Starts with.
	Operator_OPERATOR_STARTS_WITH Operator = 11
	// Ends with.
	Operator_OPERATOR_ENDS_WITH Operator = 12
	// Is null.
	Operator_OPERATOR_NULL Operator = 13
	// Is not null.
	Operator_OPERATOR_NOT_NULL Operator = 14
	// Between.
	Operator_OPERATOR_BETWEEN Operator = 15
)

// Enum value maps for Operator.
var (
	Operator_name = map[int32]string{
		0:  "OPERATOR_UNSPECIFIED",
		1:  "OPERATOR_EQ",
		2:  "OPERATOR_NOT_EQ",
		3:  "OPERATOR_GT",
		4:  "OPERATOR_LT",
		5:  "OPERATOR_GE",
		6:  "OPERATOR_LE",
		7:  "OPERATOR_IN",
		8:  "OPERATOR_NOT_IN",
		9:  "OPERATOR_CONTAINS",
		10: "OPERATOR_NOT_CONTAINS",
		11: "OPERATOR_STARTS_WITH",
		12: "OPERATOR_ENDS_WITH",
		13: "OPERATOR_NULL",
		14: "OPERATOR_NOT_NULL",
		15: "OPERATOR_BETWEEN",
	}
	Operator_value = map[string]int32{
		"OPERATOR_UNSPECIFIED":  0,
		"OPERATOR_EQ":           1,
		"OPERATOR_NOT_EQ":       2,
		"OPERATOR_GT":           3,
		"OPERATOR_LT":           4,
		"OPERATOR_GE":           5,
		"OPERATOR_LE":           6,
		"OPERATOR_IN":           7,
		"OPERATOR_NOT_IN":       8,
		"OPERATOR_CONTAINS":     9,
		"OPERATOR_NOT_CONTAINS": 10,
		"OPERATOR_STARTS_WITH":  11,
		"OPERATOR_ENDS_WITH":    12,
		"OPERATOR_NULL":         13,
		"OPERATOR_NOT_NULL":     14,
		"OPERATOR_BETWEEN":      15,
	}
)

func (x Operator) Enum() *Operator {
	p := new(Operator)
	*p = x
	return p
}

func (x Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_v1_request_proto_enumTypes[0].Descriptor()
}

func (Operator) Type() protoreflect.EnumType {
	return &file_shared_v1_request_proto_enumTypes[0]
}

func (x Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operator.Descriptor instead.
func (Operator) EnumDescriptor() ([]byte, []int) {
	return file_shared_v1_request_proto_rawDescGZIP(), []int{0}
}

type ValueType int32

const (
	ValueType_VALUE_TYPE_UNSPECIFIED ValueType = 0
	// String. Default.
	ValueType_VALUE_TYPE_STRING ValueType = 1
	// Integer. In the format of '123' or '-123'.
	ValueType_VALUE_TYPE_INTEGER ValueType = 2
	// Float. In the format of '123.45'.
	ValueType_VALUE_TYPE_FLOAT ValueType = 3
	// Boolean. In the format of 'true' or 'false'.
	ValueType_VALUE_TYPE_BOOLEAN ValueType = 4
	// Date. In the format of 'YYYY-MM-DD'.
	ValueType_VALUE_TYPE_DATE ValueType = 5
	// Time. In the format of 'HH:MM:SS'.
	ValueType_VALUE_TYPE_TIME ValueType = 6
	// Datetime. In the format of 'YYYY-MM-DDTHH:MM:SS'.
	ValueType_VALUE_TYPE_DATETIME ValueType = 7
)

// Enum value maps for ValueType.
var (
	ValueType_name = map[int32]string{
		0: "VALUE_TYPE_UNSPECIFIED",
		1: "VALUE_TYPE_STRING",
		2: "VALUE_TYPE_INTEGER",
		3: "VALUE_TYPE_FLOAT",
		4: "VALUE_TYPE_BOOLEAN",
		5: "VALUE_TYPE_DATE",
		6: "VALUE_TYPE_TIME",
		7: "VALUE_TYPE_DATETIME",
	}
	ValueType_value = map[string]int32{
		"VALUE_TYPE_UNSPECIFIED": 0,
		"VALUE_TYPE_STRING":      1,
		"VALUE_TYPE_INTEGER":     2,
		"VALUE_TYPE_FLOAT":       3,
		"VALUE_TYPE_BOOLEAN":     4,
		"VALUE_TYPE_DATE":        5,
		"VALUE_TYPE_TIME":        6,
		"VALUE_TYPE_DATETIME":    7,
	}
)

func (x ValueType) Enum() *ValueType {
	p := new(ValueType)
	*p = x
	return p
}

func (x ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_v1_request_proto_enumTypes[1].Descriptor()
}

func (ValueType) Type() protoreflect.EnumType {
	return &file_shared_v1_request_proto_enumTypes[1]
}

func (x ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValueType.Descriptor instead.
func (ValueType) EnumDescriptor() ([]byte, []int) {
	return file_shared_v1_request_proto_rawDescGZIP(), []int{1}
}

// The request to fetch a list of items.
type RequestPagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The token that should be used to fetch the next page. If not provided, the first page will be fetched. In form of encoded base64 string.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Optional. The limit of the number of items to return. The default is 10.
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Optional. The filters to apply to the items. The default is no filters.
	Filters []*RequestFilter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Optional. The sorts to apply to the items. The default is to sort by the last_modified_date field in ascending order or no sort if the field is not present.
	Sorts []*RequestSort `protobuf:"bytes,4,rep,name=sorts,proto3" json:"sorts,omitempty"`
}

func (x *RequestPagination) Reset() {
	*x = RequestPagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_v1_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPagination) ProtoMessage() {}

func (x *RequestPagination) ProtoReflect() protoreflect.Message {
	mi := &file_shared_v1_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPagination.ProtoReflect.Descriptor instead.
func (*RequestPagination) Descriptor() ([]byte, []int) {
	return file_shared_v1_request_proto_rawDescGZIP(), []int{0}
}

func (x *RequestPagination) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RequestPagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RequestPagination) GetFilters() []*RequestFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *RequestPagination) GetSorts() []*RequestSort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

type RequestFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The field to filter by.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Conditionally required. The value to filter by.
	// If the operator is 'null' or 'not_null', the value will be ignored and can be omitted.
	// If the operator is 'in' or 'not_in', the value should be a list of values separated by vertical bars '|'.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Required. The operator to use for the filter.
	Operator Operator `protobuf:"varint,3,opt,name=operator,proto3,enum=shared.v1.Operator" json:"operator,omitempty"`
	// Optional. Whether the filter is case sensitive. The default is false.
	IsCaseSensitive bool `protobuf:"varint,4,opt,name=is_case_sensitive,json=isCaseSensitive,proto3" json:"is_case_sensitive,omitempty"`
	// Optional. The type of the value. The default is string.
	ValueType ValueType `protobuf:"varint,5,opt,name=value_type,json=valueType,proto3,enum=shared.v1.ValueType" json:"value_type,omitempty"`
}

func (x *RequestFilter) Reset() {
	*x = RequestFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_v1_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestFilter) ProtoMessage() {}

func (x *RequestFilter) ProtoReflect() protoreflect.Message {
	mi := &file_shared_v1_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestFilter.ProtoReflect.Descriptor instead.
func (*RequestFilter) Descriptor() ([]byte, []int) {
	return file_shared_v1_request_proto_rawDescGZIP(), []int{1}
}

func (x *RequestFilter) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *RequestFilter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RequestFilter) GetOperator() Operator {
	if x != nil {
		return x.Operator
	}
	return Operator_OPERATOR_UNSPECIFIED
}

func (x *RequestFilter) GetIsCaseSensitive() bool {
	if x != nil {
		return x.IsCaseSensitive
	}
	return false
}

func (x *RequestFilter) GetValueType() ValueType {
	if x != nil {
		return x.ValueType
	}
	return ValueType_VALUE_TYPE_UNSPECIFIED
}

type RequestSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The field to sort by. The default is the updated_at field.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Optional The order of the sort, either 'asc' or 'desc'. The default is 'asc'.
	Order string `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *RequestSort) Reset() {
	*x = RequestSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_v1_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSort) ProtoMessage() {}

func (x *RequestSort) ProtoReflect() protoreflect.Message {
	mi := &file_shared_v1_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSort.ProtoReflect.Descriptor instead.
func (*RequestSort) Descriptor() ([]byte, []int) {
	return file_shared_v1_request_proto_rawDescGZIP(), []int{2}
}

func (x *RequestSort) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *RequestSort) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

var File_shared_v1_request_proto protoreflect.FileDescriptor

var file_shared_v1_request_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x22, 0xa1, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x6f,
	0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x72,
	0x74, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x63, 0x61,
	0x73, 0x65, 0x5f, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x43, 0x61, 0x73, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2a, 0xd8, 0x02, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x14, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x51, 0x10, 0x02,
	0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x47, 0x54, 0x10,
	0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x4c, 0x54,
	0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x47,
	0x45, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f,
	0x4c, 0x45, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52,
	0x5f, 0x49, 0x4e, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f,
	0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x53, 0x10,
	0x09, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x53, 0x10, 0x0a, 0x12, 0x18, 0x0a, 0x14,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x53, 0x5f,
	0x57, 0x49, 0x54, 0x48, 0x10, 0x0b, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54,
	0x4f, 0x52, 0x5f, 0x45, 0x4e, 0x44, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x0c, 0x12, 0x11,
	0x0a, 0x0d, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x0d, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x0e, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x4f, 0x52, 0x5f, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x10, 0x0f, 0x2a, 0xc7,
	0x01, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16,
	0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x41, 0x4c, 0x55,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x16, 0x0a, 0x12, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x03, 0x12, 0x16, 0x0a,
	0x12, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4c,
	0x45, 0x41, 0x4e, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x41,
	0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x06, 0x12,
	0x17, 0x0a, 0x13, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41,
	0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x07, 0x42, 0x91, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6e, 0x77, 0x6f, 0x72, 0x6b, 0x64, 0x61, 0x79,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31,
	0x3b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa,
	0x02, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shared_v1_request_proto_rawDescOnce sync.Once
	file_shared_v1_request_proto_rawDescData = file_shared_v1_request_proto_rawDesc
)

func file_shared_v1_request_proto_rawDescGZIP() []byte {
	file_shared_v1_request_proto_rawDescOnce.Do(func() {
		file_shared_v1_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_shared_v1_request_proto_rawDescData)
	})
	return file_shared_v1_request_proto_rawDescData
}

var file_shared_v1_request_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_shared_v1_request_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_shared_v1_request_proto_goTypes = []interface{}{
	(Operator)(0),             // 0: shared.v1.Operator
	(ValueType)(0),            // 1: shared.v1.ValueType
	(*RequestPagination)(nil), // 2: shared.v1.RequestPagination
	(*RequestFilter)(nil),     // 3: shared.v1.RequestFilter
	(*RequestSort)(nil),       // 4: shared.v1.RequestSort
}
var file_shared_v1_request_proto_depIdxs = []int32{
	3, // 0: shared.v1.RequestPagination.filters:type_name -> shared.v1.RequestFilter
	4, // 1: shared.v1.RequestPagination.sorts:type_name -> shared.v1.RequestSort
	0, // 2: shared.v1.RequestFilter.operator:type_name -> shared.v1.Operator
	1, // 3: shared.v1.RequestFilter.value_type:type_name -> shared.v1.ValueType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_shared_v1_request_proto_init() }
func file_shared_v1_request_proto_init() {
	if File_shared_v1_request_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shared_v1_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_v1_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_v1_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shared_v1_request_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shared_v1_request_proto_goTypes,
		DependencyIndexes: file_shared_v1_request_proto_depIdxs,
		EnumInfos:         file_shared_v1_request_proto_enumTypes,
		MessageInfos:      file_shared_v1_request_proto_msgTypes,
	}.Build()
	File_shared_v1_request_proto = out.File
	file_shared_v1_request_proto_rawDesc = nil
	file_shared_v1_request_proto_goTypes = nil
	file_shared_v1_request_proto_depIdxs = nil
}
