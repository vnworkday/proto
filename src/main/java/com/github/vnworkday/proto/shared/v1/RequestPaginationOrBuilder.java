// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: shared/v1/request.proto
// Protobuf Java Version: 4.27.0

package com.github.vnworkday.proto.shared.v1;

public interface RequestPaginationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:shared.v1.RequestPagination)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Optional. The token that should be used to fetch the next page. If not provided, the first page will be fetched. In form of encoded base64 string.
   * </pre>
   *
   * <code>string token = 1 [json_name = "token"];</code>
   * @return The token.
   */
  java.lang.String getToken();
  /**
   * <pre>
   * Optional. The token that should be used to fetch the next page. If not provided, the first page will be fetched. In form of encoded base64 string.
   * </pre>
   *
   * <code>string token = 1 [json_name = "token"];</code>
   * @return The bytes for token.
   */
  com.google.protobuf.ByteString
      getTokenBytes();

  /**
   * <pre>
   * Optional. The limit of the number of items to return. The default is 10.
   * </pre>
   *
   * <code>int32 limit = 2 [json_name = "limit"];</code>
   * @return The limit.
   */
  int getLimit();

  /**
   * <pre>
   * Optional. The filters to apply to the items. The default is no filters.
   * </pre>
   *
   * <code>repeated .shared.v1.RequestFilter filters = 3 [json_name = "filters"];</code>
   */
  java.util.List<com.github.vnworkday.proto.shared.v1.RequestFilter> 
      getFiltersList();
  /**
   * <pre>
   * Optional. The filters to apply to the items. The default is no filters.
   * </pre>
   *
   * <code>repeated .shared.v1.RequestFilter filters = 3 [json_name = "filters"];</code>
   */
  com.github.vnworkday.proto.shared.v1.RequestFilter getFilters(int index);
  /**
   * <pre>
   * Optional. The filters to apply to the items. The default is no filters.
   * </pre>
   *
   * <code>repeated .shared.v1.RequestFilter filters = 3 [json_name = "filters"];</code>
   */
  int getFiltersCount();
  /**
   * <pre>
   * Optional. The filters to apply to the items. The default is no filters.
   * </pre>
   *
   * <code>repeated .shared.v1.RequestFilter filters = 3 [json_name = "filters"];</code>
   */
  java.util.List<? extends com.github.vnworkday.proto.shared.v1.RequestFilterOrBuilder> 
      getFiltersOrBuilderList();
  /**
   * <pre>
   * Optional. The filters to apply to the items. The default is no filters.
   * </pre>
   *
   * <code>repeated .shared.v1.RequestFilter filters = 3 [json_name = "filters"];</code>
   */
  com.github.vnworkday.proto.shared.v1.RequestFilterOrBuilder getFiltersOrBuilder(
      int index);

  /**
   * <pre>
   * Optional. The sorts to apply to the items. The default is to sort by the last_modified_date field in ascending order or no sort if the field is not present.
   * </pre>
   *
   * <code>repeated .shared.v1.RequestSort sorts = 4 [json_name = "sorts"];</code>
   */
  java.util.List<com.github.vnworkday.proto.shared.v1.RequestSort> 
      getSortsList();
  /**
   * <pre>
   * Optional. The sorts to apply to the items. The default is to sort by the last_modified_date field in ascending order or no sort if the field is not present.
   * </pre>
   *
   * <code>repeated .shared.v1.RequestSort sorts = 4 [json_name = "sorts"];</code>
   */
  com.github.vnworkday.proto.shared.v1.RequestSort getSorts(int index);
  /**
   * <pre>
   * Optional. The sorts to apply to the items. The default is to sort by the last_modified_date field in ascending order or no sort if the field is not present.
   * </pre>
   *
   * <code>repeated .shared.v1.RequestSort sorts = 4 [json_name = "sorts"];</code>
   */
  int getSortsCount();
  /**
   * <pre>
   * Optional. The sorts to apply to the items. The default is to sort by the last_modified_date field in ascending order or no sort if the field is not present.
   * </pre>
   *
   * <code>repeated .shared.v1.RequestSort sorts = 4 [json_name = "sorts"];</code>
   */
  java.util.List<? extends com.github.vnworkday.proto.shared.v1.RequestSortOrBuilder> 
      getSortsOrBuilderList();
  /**
   * <pre>
   * Optional. The sorts to apply to the items. The default is to sort by the last_modified_date field in ascending order or no sort if the field is not present.
   * </pre>
   *
   * <code>repeated .shared.v1.RequestSort sorts = 4 [json_name = "sorts"];</code>
   */
  com.github.vnworkday.proto.shared.v1.RequestSortOrBuilder getSortsOrBuilder(
      int index);
}
