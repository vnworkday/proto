// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: account/tenant/v1/tenant.proto
// Protobuf Java Version: 4.27.0

package com.github.vnworkday.proto.account.tenant.v1;

/**
 * Protobuf enum {@code account.tenant.v1.TenantStatus}
 */
public enum TenantStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>TENANT_STATUS_UNSPECIFIED = 0;</code>
   */
  TENANT_STATUS_UNSPECIFIED(0),
  /**
   * <pre>
   * Default. After the tenant is created, it is placed in the provisioning state and not ready for use yet.
   * </pre>
   *
   * <code>TENANT_STATUS_PROVISIONING = 1;</code>
   */
  TENANT_STATUS_PROVISIONING(1),
  /**
   * <pre>
   * Active tenant is a tenant that is ready for use and can be accessed by users.
   * </pre>
   *
   * <code>TENANT_STATUS_ACTIVE = 2;</code>
   */
  TENANT_STATUS_ACTIVE(2),
  /**
   * <pre>
   * Inactive tenant is a tenant that is not ready for use and cannot be accessed by users. It is disabled by the tenant admin only.
   * </pre>
   *
   * <code>TENANT_STATUS_INACTIVE = 3;</code>
   */
  TENANT_STATUS_INACTIVE(3),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 0,
      /* suffix= */ "",
      TenantStatus.class.getName());
  }
  /**
   * <code>TENANT_STATUS_UNSPECIFIED = 0;</code>
   */
  public static final int TENANT_STATUS_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Default. After the tenant is created, it is placed in the provisioning state and not ready for use yet.
   * </pre>
   *
   * <code>TENANT_STATUS_PROVISIONING = 1;</code>
   */
  public static final int TENANT_STATUS_PROVISIONING_VALUE = 1;
  /**
   * <pre>
   * Active tenant is a tenant that is ready for use and can be accessed by users.
   * </pre>
   *
   * <code>TENANT_STATUS_ACTIVE = 2;</code>
   */
  public static final int TENANT_STATUS_ACTIVE_VALUE = 2;
  /**
   * <pre>
   * Inactive tenant is a tenant that is not ready for use and cannot be accessed by users. It is disabled by the tenant admin only.
   * </pre>
   *
   * <code>TENANT_STATUS_INACTIVE = 3;</code>
   */
  public static final int TENANT_STATUS_INACTIVE_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static TenantStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static TenantStatus forNumber(int value) {
    switch (value) {
      case 0: return TENANT_STATUS_UNSPECIFIED;
      case 1: return TENANT_STATUS_PROVISIONING;
      case 2: return TENANT_STATUS_ACTIVE;
      case 3: return TENANT_STATUS_INACTIVE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TenantStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      TenantStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TenantStatus>() {
          public TenantStatus findValueByNumber(int number) {
            return TenantStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.github.vnworkday.proto.account.tenant.v1.TenantProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final TenantStatus[] VALUES = values();

  public static TenantStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private TenantStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:account.tenant.v1.TenantStatus)
}

