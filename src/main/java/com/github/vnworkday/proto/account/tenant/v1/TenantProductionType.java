// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: account/tenant/v1/tenant.proto
// Protobuf Java Version: 4.27.0

package com.github.vnworkday.proto.account.tenant.v1;

/**
 * Protobuf enum {@code account.tenant.v1.TenantProductionType}
 */
public enum TenantProductionType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>TENANT_PRODUCTION_TYPE_UNSPECIFIED = 0;</code>
   */
  TENANT_PRODUCTION_TYPE_UNSPECIFIED(0),
  /**
   * <pre>
   * Default. Enterprise tenant is a tenant that is created by an enterprise customer.
   * </pre>
   *
   * <code>TENANT_PRODUCTION_TYPE_ENTERPRISE = 1;</code>
   */
  TENANT_PRODUCTION_TYPE_ENTERPRISE(1),
  /**
   * <pre>
   * Root tenant is a tenant that is created by the system itself. It is used for system-wide configurations. There is only one root tenant in the system.
   * </pre>
   *
   * <code>TENANT_PRODUCTION_TYPE_ROOT = 2;</code>
   */
  TENANT_PRODUCTION_TYPE_ROOT(2),
  /**
   * <pre>
   * Internal tenant is a tenant that is created by the system itself. It is used for internal testing purposes.
   * </pre>
   *
   * <code>TENANT_PRODUCTION_TYPE_INTERNAL = 3;</code>
   */
  TENANT_PRODUCTION_TYPE_INTERNAL(3),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 0,
      /* suffix= */ "",
      TenantProductionType.class.getName());
  }
  /**
   * <code>TENANT_PRODUCTION_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int TENANT_PRODUCTION_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Default. Enterprise tenant is a tenant that is created by an enterprise customer.
   * </pre>
   *
   * <code>TENANT_PRODUCTION_TYPE_ENTERPRISE = 1;</code>
   */
  public static final int TENANT_PRODUCTION_TYPE_ENTERPRISE_VALUE = 1;
  /**
   * <pre>
   * Root tenant is a tenant that is created by the system itself. It is used for system-wide configurations. There is only one root tenant in the system.
   * </pre>
   *
   * <code>TENANT_PRODUCTION_TYPE_ROOT = 2;</code>
   */
  public static final int TENANT_PRODUCTION_TYPE_ROOT_VALUE = 2;
  /**
   * <pre>
   * Internal tenant is a tenant that is created by the system itself. It is used for internal testing purposes.
   * </pre>
   *
   * <code>TENANT_PRODUCTION_TYPE_INTERNAL = 3;</code>
   */
  public static final int TENANT_PRODUCTION_TYPE_INTERNAL_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static TenantProductionType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static TenantProductionType forNumber(int value) {
    switch (value) {
      case 0: return TENANT_PRODUCTION_TYPE_UNSPECIFIED;
      case 1: return TENANT_PRODUCTION_TYPE_ENTERPRISE;
      case 2: return TENANT_PRODUCTION_TYPE_ROOT;
      case 3: return TENANT_PRODUCTION_TYPE_INTERNAL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TenantProductionType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      TenantProductionType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TenantProductionType>() {
          public TenantProductionType findValueByNumber(int number) {
            return TenantProductionType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.github.vnworkday.proto.account.tenant.v1.TenantProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final TenantProductionType[] VALUES = values();

  public static TenantProductionType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private TenantProductionType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:account.tenant.v1.TenantProductionType)
}

